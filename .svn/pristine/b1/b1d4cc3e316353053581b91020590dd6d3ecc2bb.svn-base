import Nerv from "nervjs";
import Taro, { getMenuButtonBoundingClientRect as _getMenuButtonBoundingClientRect, getSystemInfoSync as _getSystemInfoSync, makePhoneCall as _makePhoneCall } from "@tarojs/taro-h5";
import { View, Text, Image, Input } from '@tarojs/components';
import './shopDetail.scss';
import { IS_WEAPP_ENV, toast } from "../../tool/main";
import HeaderBG from "../../components/headerBG/headerBG"; // top 背景
import { AtSearchBar, AtTag } from 'taro-ui';
import CardView from "../../components/cardView/cardView"; // 卡片视图
import phoneIcon from '../../../public/images/phone.png';
import addIcon from '../../../public/images/addIcon.png';
import subIcon from '../../../public/images/subIcon.png';
import mockData from "./mockData";

export default class ShopDetail extends Taro.Component {
  state = {
    sliderItemsIndex: 0, // 侧边分类栏下标 
    goodsType: [], // 商品数据
    topBoinding: '' // 微信端 胶囊距离顶部位置
  };

  componentWillMount() {
    let topBoinding;
    let goodsType = [];
    if (IS_WEAPP_ENV) topBoinding = _getMenuButtonBoundingClientRect().top; // 微信端 胶囊距离顶部位置

    mockData.goodsType.map((item, index) => {
      console.log(item);
      item.tags.map(tagsItem => {
        tagsItem.active = false;
      });
      goodsType.push(item);
    });
    this.setState({ goodsType, topBoinding });
  }

  componentDidMount() {
    console.log(_getSystemInfoSync());
    console.log();
  }

  componentWillUnmount() {}

  componentDidShow() {}

  componentDidHide() {}

  config = {
    navigationBarTitleText: '首页',
    navigationBarBackgroundColor: '#fec10d',
    navigationStyle: 'custom'

    // 则边栏 items 选中效果更新
  };onMenuItemsClick(i) {
    this.setState({
      sliderItemsIndex: i
    });
  }
  // 商品 tag 分类
  onGoodTagClick(e) {
    let goodsType = this.state.goodsType;
    let index = this.state.sliderItemsIndex;

    // 判断更改点击状态
    goodsType[index].tags.forEach((item, i) => {
      if (item.tagName == e.name) {
        goodsType[index].tags[i].active = !e.active;
      } else {
        goodsType[index].tags[i].active = false;
      }
    });
    console.log(goodsType);
    this.setState({ goodsType });
  }

  // 点击减少商品
  onSubGoodNumClick(e) {
    console.log(e);
  }

  // 点击增加商品
  onAddGoodNumClick(e) {
    console.log(e);
  }

  // 点击复制商家电话号码
  onCallShopClick() {
    toast('已复制商家电话号码');
    _makePhoneCall({
      phoneNumber: '13111111111' //仅为示例，并非真实的电话号码
    });
  }

  // 渲染侧边栏
  renderSliderItemsSelected() {
    let { sliderItemsIndex } = this.state;
    let sliderList = mockData.goodsType.map((item, index) => {
      return <View className={(sliderItemsIndex == index ? 'item-selected' : false) + ' menu-item'} key={index} onClick={() => this.onMenuItemsClick(index)}>
          <Text className="item-text">{item.name}</Text>
        </View>;
    });
    return sliderList;
  }

  // 渲染 商品分类 tag
  renderGoodTags() {
    const goodsType = this.state.goodsType;
    let index = this.state.sliderItemsIndex;
    // 无 tag分类信息时，不渲染
    if (goodsType.length == 0) return null;

    let renderGoodTagList = goodsType[index].tags.map((item, index) => {
      return <AtTag key={index} onClick={e => this.onGoodTagClick(e)} active={item.active} size="normal" name={item.tagName} className="type-tag">{item.tagName}</AtTag>;
    });
    return renderGoodTagList;
  }

  // 渲染商品卡片
  renderGoodCards() {
    let renderGoodCardList = mockData.goodsDetail.map((item, index) => {
      return <View className="sd-good-cards-item" key={index}>
          <Image className="goodImg" mode="aspectFill" onClick={() => ''} style="width: 105px;height: 105px;min-width: 105px;min-height: 105px;background: #fff;" src={item.img} />
          <View className="goodInfo">
            <View className="title" style={{ '-webkit-box-orient': 'vertical' }}>{item.typeName}</View>
            <View className="tags">
              <AtTag size="small" active className="PromoionTag">限时抢购</AtTag>
            </View>

            <View className="price">
              <Text className="new">￥{item.price}</Text>
              <Text className="old">￥{item.oldPrice}</Text>
            </View>
            <View className="goodBottom">
              <View className="salesNum">月销量{item.payNum}件</View>
              <View className="changeGoodsCar">
                <Image mode="aspectFill" onClick={e => this.onSubGoodNumClick(e)} style="width: 23px;height: 23px;background: #fff;vertical-align: sub;" src={subIcon} />
                <Input maxLength="3" value="" type="number" className="goodsCarNum"></Input>
                <Image mode="aspectFill" onClick={e => this.onAddGoodNumClick(e)} style="width: 23px;height: 23px;background: #fff;vertical-align: sub;" src={addIcon} />
              </View>
            </View>
          </View>
        </View>;
    });
    return renderGoodCardList;
  }

  onGoodTypesClick(i) {
    console.log(i);
  }

  render() {
    let SliderList = this.renderSliderItemsSelected(); // 侧边栏
    let RenderGoodTagList = this.renderGoodTags();
    let GoodCardsList = this.renderGoodCards(); // 商品卡片
    let topBar;
    if (IS_WEAPP_ENV) topBar = 'topBar';
    console.log(topBar, this.state.goodsType);
    return <View className={topBar + ' shopDetail'}>
        {/* top 背景 */}
        <HeaderBG headerProps="h5-top-bg" />

        {/* 搜索框 */}
        <View className="sd-seach-container" style={{ 'padding-top': this.state.topBoinding + 'px' }}>
          <AtSearchBar className="sd-seach" inputType="text" value={this.state.value} onChange={this.onChange} onActionClick={this.onActionClick} />
        </View>

        {/* 店铺卡片区域 */}
        <View className="sd-shopCard-container">
          <CardView
        // 左侧图片，main 信息
        leftImgSize="large" leftImgUrl="https://pic2.zhimg.com/80/v2-0a80487d102fa8f4323279779e7ee940_720w.jpg" title="每日优鲜(赵凌路店)" infoType={'Text'} infoContent="赵凌普路北行70米南距离您668M 3公里内满188元配送"
        // 右侧图片以及事件
        rightImgUrl={phoneIcon} rightImgStyle="width: 25px;height: 25px;background: #fff;" rightImgText="联系卖家" onRightImgClick={() => this.onCallShopClick()} />
        </View>

        {/* 商品区域 */}
        <View className="sd-shop-detail-container">

          {/* 分类栏 */}
          <View className="sd-good-menu-box">
            {SliderList}
          </View>

          {/* 商品区域 */}
          <View className="sd-good-detail-box">
            {/* 分类区域 */}
            <View className="sd-good-type-box">
              {RenderGoodTagList}
            </View>

            {/* 商品卡片区域 */}
            <View className="sd-good-cards-box">
              {GoodCardsList}
            </View>
          </View>
        </View>
      </View>;
  }
}